/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_data_fetcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/data_fetcher */ \"./src/scripts/data_fetcher.js\");\n/* harmony import */ var _scripts_view__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/view */ \"./src/scripts/view.js\");\n/* harmony import */ var _scripts_player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/player */ \"./src/scripts/player.js\");\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let view = new _scripts_view__WEBPACK_IMPORTED_MODULE_1__[\"default\"](document);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUdBRyxRQUFRLENBQUNDLGdCQUFULENBQTBCLGtCQUExQixFQUE4QyxNQUFNO0FBQ2hELE1BQUlDLElBQUksR0FBRyxJQUFJSixxREFBSixDQUFTRSxRQUFULENBQVg7QUFDSCxDQUZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vTkJBLVN0YXQtRGFzaGJvYXJkLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERhdGFGZXRjaGVyIGZyb20gXCIuL3NjcmlwdHMvZGF0YV9mZXRjaGVyXCI7XG5pbXBvcnQgVmlldyBmcm9tIFwiLi9zY3JpcHRzL3ZpZXdcIjtcbmltcG9ydCBQbGF5ZXIgZnJvbSBcIi4vc2NyaXB0cy9wbGF5ZXJcIjtcblxuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG4gICAgbGV0IHZpZXcgPSBuZXcgVmlldyhkb2N1bWVudCk7XG59KTsiXSwibmFtZXMiOlsiRGF0YUZldGNoZXIiLCJWaWV3IiwiUGxheWVyIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwidmlldyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/data_fetcher.js":
/*!*************************************!*\
  !*** ./src/scripts/data_fetcher.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nconst DataFetcher = {\n  //Gets player information from the backend (then from API)\n  getPlayer: async function (query) {\n    const response = await fetch(`/search?searchTerm=${encodeURIComponent(query)}`);\n\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    const playerData = await response.json();\n    return playerData;\n  },\n  //Gets season average information for all selected players from the backend (then from API)\n  getSeasonAverages: async function (season, players) {\n    let playerIds = [];\n    players.forEach(player => {\n      playerIds.push(player.id);\n    });\n    const response = await fetch(`/season-average?season=${encodeURIComponent(season)}&playerId=${encodeURIComponent(JSON.stringify(playerIds))}`);\n\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    const playerData = await response.json();\n    return playerData;\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (DataFetcher);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9kYXRhX2ZldGNoZXIuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFdBQVcsR0FBRztBQUNoQjtBQUNBQyxFQUFBQSxTQUFTLEVBQUUsZ0JBQWVDLEtBQWYsRUFBc0I7QUFDN0IsVUFBTUMsUUFBUSxHQUFHLE1BQU1DLEtBQUssQ0FBRSxzQkFBcUJDLGtCQUFrQixDQUFDSCxLQUFELENBQVEsRUFBakQsQ0FBNUI7O0FBQ0EsUUFBSSxDQUFDQyxRQUFRLENBQUNHLEVBQWQsRUFBa0I7QUFDZCxZQUFNLElBQUlDLEtBQUosQ0FBVSw2QkFBVixDQUFOO0FBQ0g7O0FBQ0QsVUFBTUMsVUFBVSxHQUFHLE1BQU1MLFFBQVEsQ0FBQ00sSUFBVCxFQUF6QjtBQUNBLFdBQU9ELFVBQVA7QUFDSCxHQVRlO0FBV2hCO0FBQ0FFLEVBQUFBLGlCQUFpQixFQUFFLGdCQUFlQyxNQUFmLEVBQXVCQyxPQUF2QixFQUFnQztBQUMvQyxRQUFJQyxTQUFTLEdBQUcsRUFBaEI7QUFDQUQsSUFBQUEsT0FBTyxDQUFDRSxPQUFSLENBQWlCQyxNQUFELElBQVk7QUFDeEJGLE1BQUFBLFNBQVMsQ0FBQ0csSUFBVixDQUFlRCxNQUFNLENBQUNFLEVBQXRCO0FBQ0gsS0FGRDtBQUdBLFVBQU1kLFFBQVEsR0FBRyxNQUFNQyxLQUFLLENBQUUsMEJBQXlCQyxrQkFBa0IsQ0FBQ00sTUFBRCxDQUFTLGFBQVlOLGtCQUFrQixDQUFDYSxJQUFJLENBQUNDLFNBQUwsQ0FBZU4sU0FBZixDQUFELENBQTRCLEVBQWhILENBQTVCOztBQUNBLFFBQUksQ0FBQ1YsUUFBUSxDQUFDRyxFQUFkLEVBQWtCO0FBQ2QsWUFBTSxJQUFJQyxLQUFKLENBQVUsNkJBQVYsQ0FBTjtBQUNIOztBQUNELFVBQU1DLFVBQVUsR0FBRyxNQUFNTCxRQUFRLENBQUNNLElBQVQsRUFBekI7QUFDQSxXQUFPRCxVQUFQO0FBQ0g7QUF2QmUsQ0FBcEI7QUEwQkEsK0RBQWVSLFdBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9OQkEtU3RhdC1EYXNoYm9hcmQvLi9zcmMvc2NyaXB0cy9kYXRhX2ZldGNoZXIuanM/Nzk3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBEYXRhRmV0Y2hlciA9IHtcbiAgICAvL0dldHMgcGxheWVyIGluZm9ybWF0aW9uIGZyb20gdGhlIGJhY2tlbmQgKHRoZW4gZnJvbSBBUEkpXG4gICAgZ2V0UGxheWVyOiBhc3luYyBmdW5jdGlvbihxdWVyeSkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAvc2VhcmNoP3NlYXJjaFRlcm09JHtlbmNvZGVVUklDb21wb25lbnQocXVlcnkpfWApO1xuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05ldHdvcmsgcmVzcG9uc2Ugd2FzIG5vdCBvaycpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBsYXllckRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCkgXG4gICAgICAgIHJldHVybiBwbGF5ZXJEYXRhO1xuICAgIH0sXG5cbiAgICAvL0dldHMgc2Vhc29uIGF2ZXJhZ2UgaW5mb3JtYXRpb24gZm9yIGFsbCBzZWxlY3RlZCBwbGF5ZXJzIGZyb20gdGhlIGJhY2tlbmQgKHRoZW4gZnJvbSBBUEkpXG4gICAgZ2V0U2Vhc29uQXZlcmFnZXM6IGFzeW5jIGZ1bmN0aW9uKHNlYXNvbiwgcGxheWVycykge1xuICAgICAgICBsZXQgcGxheWVySWRzID0gW107XG4gICAgICAgIHBsYXllcnMuZm9yRWFjaCgocGxheWVyKSA9PiB7XG4gICAgICAgICAgICBwbGF5ZXJJZHMucHVzaChwbGF5ZXIuaWQpO1xuICAgICAgICB9KVxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAvc2Vhc29uLWF2ZXJhZ2U/c2Vhc29uPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHNlYXNvbil9JnBsYXllcklkPSR7ZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHBsYXllcklkcykpfWApO1xuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05ldHdvcmsgcmVzcG9uc2Ugd2FzIG5vdCBvaycpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBsYXllckRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAgICAgcmV0dXJuIHBsYXllckRhdGE7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBEYXRhRmV0Y2hlcjsiXSwibmFtZXMiOlsiRGF0YUZldGNoZXIiLCJnZXRQbGF5ZXIiLCJxdWVyeSIsInJlc3BvbnNlIiwiZmV0Y2giLCJlbmNvZGVVUklDb21wb25lbnQiLCJvayIsIkVycm9yIiwicGxheWVyRGF0YSIsImpzb24iLCJnZXRTZWFzb25BdmVyYWdlcyIsInNlYXNvbiIsInBsYXllcnMiLCJwbGF5ZXJJZHMiLCJmb3JFYWNoIiwicGxheWVyIiwicHVzaCIsImlkIiwiSlNPTiIsInN0cmluZ2lmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/data_fetcher.js\n");

/***/ }),

/***/ "./src/scripts/data_visual.js":
/*!************************************!*\
  !*** ./src/scripts/data_visual.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ DataVisual; }\n/* harmony export */ });\nclass DataVisual {\n  constructor() {}\n\n  drawLineChart(seasons, metrics) {\n    //set the dimensions of the graph\n    const margin = {\n      top: 10,\n      right: 30,\n      bottom: 30,\n      left: 60\n    },\n          width = 1000 - margin.left - margin.right,\n          height = 580 - margin.top - margin.bottom;\n    let svg = d3.select(\"#data-visualization\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    let data = [];\n\n    for (let i = 0; i < seasons.length; i++) {\n      data.push({\n        x: seasons[i],\n        y: metrics[i][1]\n      });\n    } // Add X axis\n\n\n    let x = d3.scaleLinear().domain([d3.min(data, function (d) {\n      return d.x;\n    }), d3.max(data, function (d) {\n      return d.x;\n    })]).range([0, width]);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x).tickFormat(d3.format('d')).ticks(seasons.length)); // Add Y axis\n\n    let y = d3.scaleLinear().domain([d3.min(data, function (d) {\n      return d.y;\n    }) * .90, d3.max(data, function (d) {\n      return d.y;\n    })]).range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y)); // Add the line\n\n    svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().defined(function (d) {\n      return d.y !== 0;\n    }).x(function (d) {\n      return x(d.x);\n    }).y(function (d) {\n      return y(d.y);\n    }));\n  } //Clear the current chart\n\n\n  reset() {\n    d3.selectAll(\"svg\").remove();\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q2MsR0FBSCxDQUFPVixJQUFQLEVBQWEsVUFBVVMsQ0FBVixFQUFhO0FBQUUsYUFBT0EsQ0FBQyxDQUFDSixDQUFUO0FBQWEsS0FBekMsQ0FBakQsQ0FESixFQUVITSxLQUZHLENBRUcsQ0FBQ2pCLE1BQUQsRUFBUyxDQUFULENBRkgsQ0FBUjtBQUdBQyxJQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBVyxHQUFYLEVBQ0tjLElBREwsQ0FDVWhCLEVBQUUsQ0FBQ3FCLFFBQUgsQ0FBWVosQ0FBWixDQURWLEVBakM0QixDQW9DNUI7O0FBQ0FWLElBQUFBLEdBQUcsQ0FBQ0csTUFBSixDQUFXLE1BQVgsRUFDS29CLEtBREwsQ0FDV2xCLElBRFgsRUFFS0QsSUFGTCxDQUVVLE1BRlYsRUFFa0IsTUFGbEIsRUFHS0EsSUFITCxDQUdVLFFBSFYsRUFHb0IsV0FIcEIsRUFJS0EsSUFKTCxDQUlVLGNBSlYsRUFJMEIsR0FKMUIsRUFLS0EsSUFMTCxDQUtVLEdBTFYsRUFLZUgsRUFBRSxDQUFDdUIsSUFBSCxHQUNOQyxPQURNLENBQ0UsVUFBVVgsQ0FBVixFQUFhO0FBQUUsYUFBT0EsQ0FBQyxDQUFDSixDQUFGLEtBQVEsQ0FBZjtBQUFtQixLQURwQyxFQUVORCxDQUZNLENBRUosVUFBVUssQ0FBVixFQUFhO0FBQUUsYUFBT0wsQ0FBQyxDQUFDSyxDQUFDLENBQUNMLENBQUgsQ0FBUjtBQUFlLEtBRjFCLEVBR05DLENBSE0sQ0FHSixVQUFVSSxDQUFWLEVBQWE7QUFBRSxhQUFPSixDQUFDLENBQUNJLENBQUMsQ0FBQ0osQ0FBSCxDQUFSO0FBQWUsS0FIMUIsQ0FMZjtBQVdILEdBckQyQixDQXVENUI7OztBQUNBZ0IsRUFBQUEsS0FBSyxHQUFHO0FBQ0p6QixJQUFBQSxFQUFFLENBQUMwQixTQUFILENBQWEsS0FBYixFQUFvQkMsTUFBcEI7QUFDSDs7QUExRDJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vTkJBLVN0YXQtRGFzaGJvYXJkLy4vc3JjL3NjcmlwdHMvZGF0YV92aXN1YWwuanM/ZTlkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBEYXRhVmlzdWFsIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcblxuICAgIH1cblxuICAgIGRyYXdMaW5lQ2hhcnQoc2Vhc29ucywgbWV0cmljcykge1xuICAgICAgICAvL3NldCB0aGUgZGltZW5zaW9ucyBvZiB0aGUgZ3JhcGhcbiAgICAgICAgY29uc3QgbWFyZ2luID0geyB0b3A6IDEwLCByaWdodDogMzAsIGJvdHRvbTogMzAsIGxlZnQ6IDYwIH0sXG4gICAgICAgICAgICB3aWR0aCA9IDEwMDAgLSBtYXJnaW4ubGVmdCAtIG1hcmdpbi5yaWdodCxcbiAgICAgICAgICAgIGhlaWdodCA9IDU4MCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tO1xuXG4gICAgICAgIGxldCBzdmcgPSBkMy5zZWxlY3QoXCIjZGF0YS12aXN1YWxpemF0aW9uXCIpXG4gICAgICAgICAgICAuYXBwZW5kKFwic3ZnXCIpXG4gICAgICAgICAgICAuYXR0cihcIndpZHRoXCIsIHdpZHRoICsgbWFyZ2luLmxlZnQgKyBtYXJnaW4ucmlnaHQpXG4gICAgICAgICAgICAuYXR0cihcImhlaWdodFwiLCBoZWlnaHQgKyBtYXJnaW4udG9wICsgbWFyZ2luLmJvdHRvbSlcbiAgICAgICAgICAgIC5hcHBlbmQoXCJnXCIpXG4gICAgICAgICAgICAuYXR0cihcInRyYW5zZm9ybVwiLFxuICAgICAgICAgICAgICAgIFwidHJhbnNsYXRlKFwiICsgbWFyZ2luLmxlZnQgKyBcIixcIiArIG1hcmdpbi50b3AgKyBcIilcIik7XG5cbiAgICAgICAgbGV0IGRhdGEgPSBbXTsgXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2Vhc29ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgZGF0YS5wdXNoKHsgeDogc2Vhc29uc1tpXSwgeTogbWV0cmljc1tpXVsxXSB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEFkZCBYIGF4aXNcbiAgICAgICAgbGV0IHggPSBkMy5zY2FsZUxpbmVhcigpXG4gICAgICAgICAgICAuZG9tYWluKFtkMy5taW4oZGF0YSwgZnVuY3Rpb24gKGQpIHsgcmV0dXJuIGQueDsgfSksIGQzLm1heChkYXRhLCBmdW5jdGlvbiAoZCkgeyByZXR1cm4gZC54OyB9KV0pXG4gICAgICAgICAgICAucmFuZ2UoWzAsIHdpZHRoXSk7XG4gICAgICAgIHN2Zy5hcHBlbmQoXCJnXCIpXG4gICAgICAgICAgICAuYXR0cihcInRyYW5zZm9ybVwiLCBcInRyYW5zbGF0ZSgwLFwiICsgaGVpZ2h0ICsgXCIpXCIpXG4gICAgICAgICAgICAuY2FsbChkMy5heGlzQm90dG9tKHgpXG4gICAgICAgICAgICAgICAgICAgIC50aWNrRm9ybWF0KGQzLmZvcm1hdCgnZCcpKVxuICAgICAgICAgICAgICAgICAgICAudGlja3Moc2Vhc29ucy5sZW5ndGgpKTtcblxuICAgICAgICAvLyBBZGQgWSBheGlzXG4gICAgICAgIGxldCB5ID0gZDMuc2NhbGVMaW5lYXIoKVxuICAgICAgICAgICAgLmRvbWFpbihbZDMubWluKGRhdGEsIGZ1bmN0aW9uIChkKSB7IHJldHVybiBkLnk7IH0pKi45MCwgZDMubWF4KGRhdGEsIGZ1bmN0aW9uIChkKSB7IHJldHVybiBkLnk7IH0pXSlcbiAgICAgICAgICAgIC5yYW5nZShbaGVpZ2h0LCAwXSk7XG4gICAgICAgIHN2Zy5hcHBlbmQoXCJnXCIpXG4gICAgICAgICAgICAuY2FsbChkMy5heGlzTGVmdCh5KSk7XG5cbiAgICAgICAgLy8gQWRkIHRoZSBsaW5lXG4gICAgICAgIHN2Zy5hcHBlbmQoXCJwYXRoXCIpXG4gICAgICAgICAgICAuZGF0dW0oZGF0YSlcbiAgICAgICAgICAgIC5hdHRyKFwiZmlsbFwiLCBcIm5vbmVcIilcbiAgICAgICAgICAgIC5hdHRyKFwic3Ryb2tlXCIsIFwic3RlZWxibHVlXCIpXG4gICAgICAgICAgICAuYXR0cihcInN0cm9rZS13aWR0aFwiLCAxLjUpXG4gICAgICAgICAgICAuYXR0cihcImRcIiwgZDMubGluZSgpXG4gICAgICAgICAgICAgICAgLmRlZmluZWQoZnVuY3Rpb24gKGQpIHsgcmV0dXJuIGQueSAhPT0gMDsgfSlcbiAgICAgICAgICAgICAgICAueChmdW5jdGlvbiAoZCkgeyByZXR1cm4geChkLngpIH0pXG4gICAgICAgICAgICAgICAgLnkoZnVuY3Rpb24gKGQpIHsgcmV0dXJuIHkoZC55KSB9KVxuICAgICAgICAgICAgKVxuXG4gICAgfVxuXG4gICAgLy9DbGVhciB0aGUgY3VycmVudCBjaGFydFxuICAgIHJlc2V0KCkge1xuICAgICAgICBkMy5zZWxlY3RBbGwoXCJzdmdcIikucmVtb3ZlKCk7XG4gICAgfVxufSJdLCJuYW1lcyI6WyJEYXRhVmlzdWFsIiwiY29uc3RydWN0b3IiLCJkcmF3TGluZUNoYXJ0Iiwic2Vhc29ucyIsIm1ldHJpY3MiLCJtYXJnaW4iLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsImxlZnQiLCJ3aWR0aCIsImhlaWdodCIsInN2ZyIsImQzIiwic2VsZWN0IiwiYXBwZW5kIiwiYXR0ciIsImRhdGEiLCJpIiwibGVuZ3RoIiwicHVzaCIsIngiLCJ5Iiwic2NhbGVMaW5lYXIiLCJkb21haW4iLCJtaW4iLCJkIiwibWF4IiwicmFuZ2UiLCJjYWxsIiwiYXhpc0JvdHRvbSIsInRpY2tGb3JtYXQiLCJmb3JtYXQiLCJ0aWNrcyIsImF4aXNMZWZ0IiwiZGF0dW0iLCJsaW5lIiwiZGVmaW5lZCIsInJlc2V0Iiwic2VsZWN0QWxsIiwicmVtb3ZlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/data_visual.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Player; }\n/* harmony export */ });\nclass Player {\n  constructor(options) {\n    this.fname = options.first_name;\n    this.lname = options.last_name;\n    this.id = options.id;\n    this.ppg = []; //points per game\n\n    this.apg = []; //assists per game\n\n    this.rpg = []; //rebounds per game\n\n    this.spg = []; //steals per game\n\n    this.fg_pct = []; //fg percentage\n\n    this.fg3_pct = []; //3 point percentage\n  }\n\n  updateAverages(season, averages) {\n    season = parseInt(season);\n\n    if (averages) {\n      this.ppg.push([season, averages.pts]);\n      this.apg.push([season, averages.ast]);\n      this.rpg.push([season, averages.reb]);\n      this.spg.push([season, averages.stl]);\n      this.fg_pct.push([season, averages.fg_pct]);\n      this.fg3_pct.push([season, averages.fg3_pct]);\n    } else {\n      this.ppg.push([season, 0]);\n      this.apg.push([season, 0]);\n      this.rpg.push([season, 0]);\n      this.spg.push([season, 0]);\n      this.fg_pct.push([season, 0]);\n      this.fg3_pct.push([season, 0]);\n    }\n\n    this.sortAverages();\n  }\n\n  sortAverages() {\n    this.ppg = this.ppg.sort((a, b) => a[0] > b[0] ? 1 : -1);\n    this.apg = this.apg.sort((a, b) => a[0] > b[0] ? 1 : -1);\n    this.rpg = this.rpg.sort((a, b) => a[0] > b[0] ? 1 : -1);\n    this.spg = this.spg.sort((a, b) => a[0] > b[0] ? 1 : -1);\n    this.fg_pct = this.fg_pct.sort((a, b) => a[0] > b[0] ? 1 : -1);\n    this.fg3_pct = this.fg3_pct.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  }\n\n  resetAverages() {\n    this.ppg = [];\n    this.apg = [];\n    this.rpg = [];\n    this.spg = [];\n    this.fg_pct = [];\n    this.fg3_pct = [];\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wbGF5ZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlLE1BQU1BLE1BQU4sQ0FBYTtBQUN4QkMsRUFBQUEsV0FBVyxDQUFDQyxPQUFELEVBQVU7QUFDakIsU0FBS0MsS0FBTCxHQUFhRCxPQUFPLENBQUNFLFVBQXJCO0FBQ0EsU0FBS0MsS0FBTCxHQUFhSCxPQUFPLENBQUNJLFNBQXJCO0FBQ0EsU0FBS0MsRUFBTCxHQUFVTCxPQUFPLENBQUNLLEVBQWxCO0FBRUEsU0FBS0MsR0FBTCxHQUFXLEVBQVgsQ0FMaUIsQ0FLRjs7QUFDZixTQUFLQyxHQUFMLEdBQVcsRUFBWCxDQU5pQixDQU1GOztBQUNmLFNBQUtDLEdBQUwsR0FBVyxFQUFYLENBUGlCLENBT0Y7O0FBQ2YsU0FBS0MsR0FBTCxHQUFZLEVBQVosQ0FSaUIsQ0FRRDs7QUFDaEIsU0FBS0MsTUFBTCxHQUFjLEVBQWQsQ0FUaUIsQ0FTQzs7QUFDbEIsU0FBS0MsT0FBTCxHQUFlLEVBQWYsQ0FWaUIsQ0FVRTtBQUN0Qjs7QUFFREMsRUFBQUEsY0FBYyxDQUFDQyxNQUFELEVBQVNDLFFBQVQsRUFBbUI7QUFDN0JELElBQUFBLE1BQU0sR0FBR0UsUUFBUSxDQUFDRixNQUFELENBQWpCOztBQUNBLFFBQUdDLFFBQUgsRUFBYTtBQUNULFdBQUtSLEdBQUwsQ0FBU1UsSUFBVCxDQUFjLENBQUNILE1BQUQsRUFBU0MsUUFBUSxDQUFDRyxHQUFsQixDQUFkO0FBQ0EsV0FBS1YsR0FBTCxDQUFTUyxJQUFULENBQWMsQ0FBQ0gsTUFBRCxFQUFTQyxRQUFRLENBQUNJLEdBQWxCLENBQWQ7QUFDQSxXQUFLVixHQUFMLENBQVNRLElBQVQsQ0FBYyxDQUFDSCxNQUFELEVBQVNDLFFBQVEsQ0FBQ0ssR0FBbEIsQ0FBZDtBQUNBLFdBQUtWLEdBQUwsQ0FBU08sSUFBVCxDQUFjLENBQUNILE1BQUQsRUFBU0MsUUFBUSxDQUFDTSxHQUFsQixDQUFkO0FBQ0EsV0FBS1YsTUFBTCxDQUFZTSxJQUFaLENBQWlCLENBQUNILE1BQUQsRUFBU0MsUUFBUSxDQUFDSixNQUFsQixDQUFqQjtBQUNBLFdBQUtDLE9BQUwsQ0FBYUssSUFBYixDQUFrQixDQUFDSCxNQUFELEVBQVNDLFFBQVEsQ0FBQ0gsT0FBbEIsQ0FBbEI7QUFDSCxLQVBELE1BT087QUFDSCxXQUFLTCxHQUFMLENBQVNVLElBQVQsQ0FBYyxDQUFDSCxNQUFELEVBQVMsQ0FBVCxDQUFkO0FBQ0EsV0FBS04sR0FBTCxDQUFTUyxJQUFULENBQWMsQ0FBQ0gsTUFBRCxFQUFTLENBQVQsQ0FBZDtBQUNBLFdBQUtMLEdBQUwsQ0FBU1EsSUFBVCxDQUFjLENBQUNILE1BQUQsRUFBUyxDQUFULENBQWQ7QUFDQSxXQUFLSixHQUFMLENBQVNPLElBQVQsQ0FBYyxDQUFDSCxNQUFELEVBQVMsQ0FBVCxDQUFkO0FBQ0EsV0FBS0gsTUFBTCxDQUFZTSxJQUFaLENBQWlCLENBQUNILE1BQUQsRUFBUyxDQUFULENBQWpCO0FBQ0EsV0FBS0YsT0FBTCxDQUFhSyxJQUFiLENBQWtCLENBQUNILE1BQUQsRUFBUyxDQUFULENBQWxCO0FBQ0g7O0FBQ0QsU0FBS1EsWUFBTDtBQUNIOztBQUVEQSxFQUFBQSxZQUFZLEdBQUc7QUFDWCxTQUFLZixHQUFMLEdBQVcsS0FBS0EsR0FBTCxDQUFTZ0IsSUFBVCxDQUFjLENBQUNDLENBQUQsRUFBSUMsQ0FBSixLQUFVRCxDQUFDLENBQUMsQ0FBRCxDQUFELEdBQU9DLENBQUMsQ0FBQyxDQUFELENBQVIsR0FBYyxDQUFkLEdBQWtCLENBQUMsQ0FBM0MsQ0FBWDtBQUNBLFNBQUtqQixHQUFMLEdBQVcsS0FBS0EsR0FBTCxDQUFTZSxJQUFULENBQWMsQ0FBQ0MsQ0FBRCxFQUFJQyxDQUFKLEtBQVVELENBQUMsQ0FBQyxDQUFELENBQUQsR0FBT0MsQ0FBQyxDQUFDLENBQUQsQ0FBUixHQUFjLENBQWQsR0FBa0IsQ0FBQyxDQUEzQyxDQUFYO0FBQ0EsU0FBS2hCLEdBQUwsR0FBVyxLQUFLQSxHQUFMLENBQVNjLElBQVQsQ0FBYyxDQUFDQyxDQUFELEVBQUlDLENBQUosS0FBVUQsQ0FBQyxDQUFDLENBQUQsQ0FBRCxHQUFPQyxDQUFDLENBQUMsQ0FBRCxDQUFSLEdBQWMsQ0FBZCxHQUFrQixDQUFDLENBQTNDLENBQVg7QUFDQSxTQUFLZixHQUFMLEdBQVcsS0FBS0EsR0FBTCxDQUFTYSxJQUFULENBQWMsQ0FBQ0MsQ0FBRCxFQUFJQyxDQUFKLEtBQVVELENBQUMsQ0FBQyxDQUFELENBQUQsR0FBT0MsQ0FBQyxDQUFDLENBQUQsQ0FBUixHQUFjLENBQWQsR0FBa0IsQ0FBQyxDQUEzQyxDQUFYO0FBQ0EsU0FBS2QsTUFBTCxHQUFjLEtBQUtBLE1BQUwsQ0FBWVksSUFBWixDQUFpQixDQUFDQyxDQUFELEVBQUlDLENBQUosS0FBVUQsQ0FBQyxDQUFDLENBQUQsQ0FBRCxHQUFPQyxDQUFDLENBQUMsQ0FBRCxDQUFSLEdBQWMsQ0FBZCxHQUFrQixDQUFDLENBQTlDLENBQWQ7QUFDQSxTQUFLYixPQUFMLEdBQWUsS0FBS0EsT0FBTCxDQUFhVyxJQUFiLENBQWtCLENBQUNDLENBQUQsRUFBSUMsQ0FBSixLQUFVRCxDQUFDLENBQUMsQ0FBRCxDQUFELEdBQU9DLENBQUMsQ0FBQyxDQUFELENBQVIsR0FBYyxDQUFkLEdBQWtCLENBQUMsQ0FBL0MsQ0FBZjtBQUNIOztBQUVEQyxFQUFBQSxhQUFhLEdBQUc7QUFDWixTQUFLbkIsR0FBTCxHQUFXLEVBQVg7QUFDQSxTQUFLQyxHQUFMLEdBQVcsRUFBWDtBQUNBLFNBQUtDLEdBQUwsR0FBVyxFQUFYO0FBQ0EsU0FBS0MsR0FBTCxHQUFXLEVBQVg7QUFDQSxTQUFLQyxNQUFMLEdBQWMsRUFBZDtBQUNBLFNBQUtDLE9BQUwsR0FBZSxFQUFmO0FBQ0g7O0FBbER1QiIsInNvdXJjZXMiOlsid2VicGFjazovL05CQS1TdGF0LURhc2hib2FyZC8uL3NyYy9zY3JpcHRzL3BsYXllci5qcz82NDcxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBsYXllciB7XG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgICAgICB0aGlzLmZuYW1lID0gb3B0aW9ucy5maXJzdF9uYW1lO1xuICAgICAgICB0aGlzLmxuYW1lID0gb3B0aW9ucy5sYXN0X25hbWU7XG4gICAgICAgIHRoaXMuaWQgPSBvcHRpb25zLmlkOyBcblxuICAgICAgICB0aGlzLnBwZyA9IFtdOyAvL3BvaW50cyBwZXIgZ2FtZVxuICAgICAgICB0aGlzLmFwZyA9IFtdOyAvL2Fzc2lzdHMgcGVyIGdhbWVcbiAgICAgICAgdGhpcy5ycGcgPSBbXTsgLy9yZWJvdW5kcyBwZXIgZ2FtZVxuICAgICAgICB0aGlzLnNwZyA9ICBbXTsgLy9zdGVhbHMgcGVyIGdhbWVcbiAgICAgICAgdGhpcy5mZ19wY3QgPSBbXTsgLy9mZyBwZXJjZW50YWdlXG4gICAgICAgIHRoaXMuZmczX3BjdCA9IFtdOyAvLzMgcG9pbnQgcGVyY2VudGFnZVxuICAgIH1cblxuICAgIHVwZGF0ZUF2ZXJhZ2VzKHNlYXNvbiwgYXZlcmFnZXMpIHtcbiAgICAgICAgc2Vhc29uID0gcGFyc2VJbnQoc2Vhc29uKTtcbiAgICAgICAgaWYoYXZlcmFnZXMpIHtcbiAgICAgICAgICAgIHRoaXMucHBnLnB1c2goW3NlYXNvbiwgYXZlcmFnZXMucHRzXSk7XG4gICAgICAgICAgICB0aGlzLmFwZy5wdXNoKFtzZWFzb24sIGF2ZXJhZ2VzLmFzdF0pO1xuICAgICAgICAgICAgdGhpcy5ycGcucHVzaChbc2Vhc29uLCBhdmVyYWdlcy5yZWJdKTtcbiAgICAgICAgICAgIHRoaXMuc3BnLnB1c2goW3NlYXNvbiwgYXZlcmFnZXMuc3RsXSk7XG4gICAgICAgICAgICB0aGlzLmZnX3BjdC5wdXNoKFtzZWFzb24sIGF2ZXJhZ2VzLmZnX3BjdF0pXG4gICAgICAgICAgICB0aGlzLmZnM19wY3QucHVzaChbc2Vhc29uLCBhdmVyYWdlcy5mZzNfcGN0XSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucHBnLnB1c2goW3NlYXNvbiwgMF0pO1xuICAgICAgICAgICAgdGhpcy5hcGcucHVzaChbc2Vhc29uLCAwXSk7XG4gICAgICAgICAgICB0aGlzLnJwZy5wdXNoKFtzZWFzb24sIDBdKTtcbiAgICAgICAgICAgIHRoaXMuc3BnLnB1c2goW3NlYXNvbiwgMF0pO1xuICAgICAgICAgICAgdGhpcy5mZ19wY3QucHVzaChbc2Vhc29uLCAwXSlcbiAgICAgICAgICAgIHRoaXMuZmczX3BjdC5wdXNoKFtzZWFzb24sIDBdKVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuc29ydEF2ZXJhZ2VzKCk7XG4gICAgfVxuXG4gICAgc29ydEF2ZXJhZ2VzKCkge1xuICAgICAgICB0aGlzLnBwZyA9IHRoaXMucHBnLnNvcnQoKGEsIGIpID0+IGFbMF0gPiBiWzBdID8gMSA6IC0xICk7XG4gICAgICAgIHRoaXMuYXBnID0gdGhpcy5hcGcuc29ydCgoYSwgYikgPT4gYVswXSA+IGJbMF0gPyAxIDogLTEgKTtcbiAgICAgICAgdGhpcy5ycGcgPSB0aGlzLnJwZy5zb3J0KChhLCBiKSA9PiBhWzBdID4gYlswXSA/IDEgOiAtMSApO1xuICAgICAgICB0aGlzLnNwZyA9IHRoaXMuc3BnLnNvcnQoKGEsIGIpID0+IGFbMF0gPiBiWzBdID8gMSA6IC0xICk7XG4gICAgICAgIHRoaXMuZmdfcGN0ID0gdGhpcy5mZ19wY3Quc29ydCgoYSwgYikgPT4gYVswXSA+IGJbMF0gPyAxIDogLTEgKTtcbiAgICAgICAgdGhpcy5mZzNfcGN0ID0gdGhpcy5mZzNfcGN0LnNvcnQoKGEsIGIpID0+IGFbMF0gPiBiWzBdID8gMSA6IC0xICk7XG4gICAgfVxuXG4gICAgcmVzZXRBdmVyYWdlcygpIHtcbiAgICAgICAgdGhpcy5wcGcgPSBbXTtcbiAgICAgICAgdGhpcy5hcGcgPSBbXTtcbiAgICAgICAgdGhpcy5ycGcgPSBbXTtcbiAgICAgICAgdGhpcy5zcGcgPSBbXTtcbiAgICAgICAgdGhpcy5mZ19wY3QgPSBbXTtcbiAgICAgICAgdGhpcy5mZzNfcGN0ID0gW107XG4gICAgfVxufSJdLCJuYW1lcyI6WyJQbGF5ZXIiLCJjb25zdHJ1Y3RvciIsIm9wdGlvbnMiLCJmbmFtZSIsImZpcnN0X25hbWUiLCJsbmFtZSIsImxhc3RfbmFtZSIsImlkIiwicHBnIiwiYXBnIiwicnBnIiwic3BnIiwiZmdfcGN0IiwiZmczX3BjdCIsInVwZGF0ZUF2ZXJhZ2VzIiwic2Vhc29uIiwiYXZlcmFnZXMiLCJwYXJzZUludCIsInB1c2giLCJwdHMiLCJhc3QiLCJyZWIiLCJzdGwiLCJzb3J0QXZlcmFnZXMiLCJzb3J0IiwiYSIsImIiLCJyZXNldEF2ZXJhZ2VzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/scripts/view.js":
/*!*****************************!*\
  !*** ./src/scripts/view.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ View; }\n/* harmony export */ });\n/* harmony import */ var _data_fetcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data_fetcher */ \"./src/scripts/data_fetcher.js\");\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player */ \"./src/scripts/player.js\");\n/* harmony import */ var _data_visual__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data_visual */ \"./src/scripts/data_visual.js\");\n\n\n\nclass View {\n  constructor() {\n    this.players = [];\n    this.seasons = []; //Save HTML Elements related to user search form\n\n    this.searchForm = document.querySelector(\".player-search-form\");\n    this.searchInput = document.querySelector(\".player-search-input\");\n    this.handleSearch = this.handleSearch.bind(this);\n    this.searchForm.addEventListener(\"submit\", this.handleSearch); //Save HTML Elements related to user inputs\n\n    this.otherInputsForm = document.querySelector(\".other-inputs\");\n    this.startSeasonToggle = document.querySelector(\"#start-season\");\n    this.endSeasonToggle = document.querySelector(\"#end-season\");\n    this.metricToggle = document.querySelector(\"#metric\");\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.otherInputsForm.addEventListener(\"submit\", this.handleSubmit);\n    this.visual = new _data_visual__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n  } //Adds player to current user selection\n\n\n  addPlayer(player) {\n    this.players.push(player);\n  } //Searches for a player and adds him if found\n\n\n  searchPlayer(query) {\n    _data_fetcher__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getPlayer(query).then(result => {\n      let playerData = result.data;\n\n      if (playerData.length === 0) {\n        alert(\"There are no players that match that name\");\n      } else if (playerData.length > 1) {\n        alert(\"Please Narrow Your Search\");\n      } else {\n        this.addPlayer(new _player__WEBPACK_IMPORTED_MODULE_1__[\"default\"](playerData[0]));\n        this.searchInput.value = '';\n      }\n    });\n  } //Event handler for \"add player / search\" button\n\n\n  handleSearch(e) {\n    e.preventDefault();\n    let input = this.searchInput.value;\n    this.searchPlayer(input);\n  } //Gets the season averages for all seasons selected by user\n\n\n  iterateSeasons(start, end, numSeasons) {\n    for (let i = start; i <= end; i++) {\n      this.getSeasonAverages(i, numSeasons);\n    }\n  } //Event handler for \"visualize data\" button\n  //Reset player averages and currently selected seasons\n  //Fetch new season data\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.reset();\n    let start = this.startSeasonToggle.value;\n    let end = this.endSeasonToggle.value;\n    let numSeasons = parseInt(end) - parseInt(start) + 1;\n    this.iterateSeasons(start, end, numSeasons);\n  } //Gets the season data for one season\n  //If we have hit the end season input, do what we need with data\n\n\n  getSeasonAverages(season, numSeasons) {\n    _data_fetcher__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getSeasonAverages(season, this.players).then(data => {\n      let averages = data.data; //Sort by player id to match API pull\n\n      this.players = this.players.sort((a, b) => a.id > b.id ? 1 : -1); //Loop handles updating player data for correct player\n      //Need to keep track of averages idx because of the way\n      //API returns data.\n\n      let averages_idx = 0;\n      this.players.forEach(player => {\n        if (averages_idx < averages.length && averages[averages_idx].player_id === player.id) {\n          player.updateAverages(parseInt(season), averages[averages_idx]);\n          averages_idx++;\n        } else {\n          player.updateAverages(parseInt(season));\n        }\n      });\n    }).then(res => {\n      //It doesn't matter what order the stats come in, just need\n      //to make sure that we have them all before doing anything else\n      this.seasons.push(parseInt(season));\n      this.seasons = this.seasons.sort();\n\n      if (this.seasons.length === numSeasons) {\n        this.players.forEach(player => {\n          console.log(`${player.fname}: ${this.getMetric(this.metricToggle.value, player)}`);\n        });\n        let currentMetric = this.getMetric(this.metricToggle.value, this.players[0]);\n        this.visual.reset();\n        this.visual.drawLineChart(this.seasons, currentMetric);\n      }\n    });\n  } //Resets player average arrays and seasons array in preparation for new data\n\n\n  reset() {\n    this.players.forEach(player => player.resetAverages());\n    this.seasons = [];\n  } //returns the selected metric array for a given player \n\n\n  getMetric(metric, player) {\n    switch (metric) {\n      case \"ppg\":\n        return player.ppg;\n\n      case \"apg\":\n        return player.apg;\n\n      case \"rpg\":\n        return player.rpg;\n\n      case \"spg\":\n        return player.spg;\n\n      case \"fg_pct\":\n        return player.fg_pct;\n\n      case \"fg3_pct\":\n        return player.fg3_pct;\n\n      default:\n        break;\n    }\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/view.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9OQkEtU3RhdC1EYXNoYm9hcmQvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;